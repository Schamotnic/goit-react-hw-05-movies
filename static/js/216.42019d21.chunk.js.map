{"version":3,"file":"static/js/216.42019d21.chunk.js","mappings":"oSAEaA,EAAS,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,MAKnB,OACI,mBAAQC,KAAK,SAASC,QAJP,WAAM,IAAD,IACpBH,EAAU,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUM,aAAX,aAAC,EAAiBC,YAAlB,QAAyB,IACtC,EAEG,sBAGH,E,kBCTYC,EAAWC,EAAAA,GAAAA,QAAF,qFAMTC,EAAKD,EAAAA,GAAAA,GAAH,kIAOFE,EAAWF,EAAAA,GAAAA,IAAF,yCAGTG,EAAUH,EAAAA,GAAAA,IAAH,mEAIPI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6CCnBRM,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEjBhB,GAASC,EAAAA,EAAAA,MAGTgB,EAAc,IAAIC,KAAKF,EAAKG,cAAcC,cAChD,OACE,UAACZ,EAAD,YACE,SAACT,EAAD,KACA,UAACW,EAAD,WAAKM,EAAKK,MAAV,KAAiB,0BAAOJ,QACxB,UAACN,EAAD,YACE,gBAAKW,IAAG,yCAAoCN,EAAKO,aAAeC,IAAKR,EAAKK,SAC1E,UAACT,EAAD,YACE,wCAAkC,GAAlBI,EAAKS,aAArB,QACA,sCAAcT,EAAKU,aACnB,qCACA,uBAAIV,EAAKW,OAAOC,KAAI,YAAc,IAAZC,EAAW,EAAXA,GAAGC,EAAQ,EAARA,KAAS,OAAO,4BAAgBA,EAAhB,MAAWD,EAAmB,aAG3E,oDACA,mBACA,SAAChB,EAAD,CAAUkB,GAAG,OAAOzB,MAAON,EAASM,MAApC,mBACA,SAAC,KAAD,CAAMyB,GAAG,UAAUzB,MAAON,EAASM,MAAnC,uBAGL,ECvBU0B,EAAmB,WAG9B,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OACN,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOnB,EAAP,KAAaoB,EAAb,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAK,wCACb,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUjB,EAFV,OAGIoB,EAAQpB,GAHZ,gDASKuB,EAAAA,GAAAA,MAAY,2BATjB,0DADa,uBAAC,WAAD,wBAaZC,EACD,GAAC,CAACP,KAGC,4BACIjB,IAAQ,SAACD,EAAD,CAAWC,KAAMA,KAC1B,SAAC,KAAD,MAIV,C,+LC9BKyB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,gCAKV,IAAMC,EAAS,mCAAG,oGACED,EAAAA,EAAAA,IAAA,uCAA0CD,IAD5C,cACfG,EADe,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKTR,EAAY,mCAAG,WAAMT,GAAN,uFACFa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,oBAAkCY,EAAlC,oBADE,cAClBG,EADkB,yBAErBA,EAASC,MAFY,2CAAH,sDAKZE,EAAY,mCAAG,WAAOlB,GAAP,uFACLa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,4BAA0CY,EAA1C,oBADK,cACtBG,EADsB,yBAErBA,EAASC,KAAKG,MAFO,2CAAH,sDAMZC,EAAa,mCAAG,WAAOC,GAAP,uFACFR,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,yBADE,cACnBN,EADmB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKbK,EAAU,mCAAG,WAAOtB,GAAP,uFACCa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,4BAA0CY,EAA1C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD","sources":["components/BtnGoBack/GoBack.jsx","components/MovieCard/MovieCardStyled.jsx","components/MovieCard/MovieCard.jsx","Pages/MovieDetailsPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import { useLocation,useNavigate } from \"react-router-dom\"\n\nexport const GoBack = () =>{\nconst location = useLocation()\nconst navigation = useNavigate()\n\nconst handelClick =() =>{\n    navigation(location?.state?.from?? '/')\n}\nreturn(\n    <button type=\"button\" onClick={handelClick}> Go Back </button>\n)\n\n};","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const Contaienr =styled.article`\nwidth: 1200px;\n  margin-right: auto;\n  margin-left: auto;\n`\n\nexport const H2 = styled.h2`\ndisplay: table;\n    width: auto;\n    margin: 15px auto;\n    letter-spacing: 1px;\n    color: #808080;\n`\nexport const CardBlock =styled.div`\n display: flex;\n`\nexport const Feature = styled.div`\nmargin-left: 15px;\n  margin-right: 15px;\n`\nexport const LinkCast = styled(Link)`\nmargin-right: 10px;\n`","import {Link, useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {GoBack} from '../BtnGoBack/GoBack';\nimport {Contaienr,H2,CardBlock,Feature,LinkCast } from \"./MovieCardStyled\";\n\nexport const MovieCard = ({item}) => {\n\n    const location=useLocation()\n  \n  \n    const releaseYear = new Date(item.release_date).getFullYear()\n    return (\n      <Contaienr>\n        <GoBack/>\n        <H2>{item.title} <span>{releaseYear}</span></H2>\n        <CardBlock>\n          <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.title}/>\n          <Feature>\n            <p>User score: {item.vote_average*10}%</p>\n            <p>Overview: {item.overview}</p>\n            <p>Genres: </p>\n            <p>{item.genres.map(({id,name})=>{return <span key={id}>{name} </span>}) }</p>\n          </Feature>\n        </CardBlock>\n        <h2>Additional information</h2>\n        <hr/>\n        <LinkCast to='cast' state={location.state}>Cast</LinkCast>\n        <Link to='reviews' state={location.state}>Reviews</Link>\n      </Contaienr>\n    )\n  };\n\n  MovieCard.propTypes={\n    item:PropTypes.array.isRequired\n  }\n\n","import { useState, useEffect } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { Outlet, useParams} from \"react-router-dom\";\nimport {getMovieById} from \"../services/moviesApi\";\nimport {MovieCard} from '../components/MovieCard/MovieCard';\n\n\nexport const MovieDetailsPage = () =>{\n   \n  \n  const {itemId} = useParams() \n   const [item, setItem] = useState(null);\n   useEffect(() =>{\n     async function fetchItem(){\n       try{\n         const item = await getMovieById(itemId);\n         setItem(item)\n        //  const p= item\n        //  console.log(p)\n         \n         \n        }catch(error){\n          toast.error('NOT FOUND, PLEASE ENTRY')\n        }\n      }\n      fetchItem()\n    },[itemId])\n    \n   return(\n        <main>\n           {item && <MovieCard item={item}/> }\n           <Outlet/>\n        </main>\n    \n   )\n}\n    \n  \n\n  \n\n\n\n    ","import axios from \"axios\"\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'c4aa3d510c537620c0bac28941863381'\n\naxios.defaults.baseURL =`${BASE_URL}`;\n\nexport const getMovies = async () =>{\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\nreturn response.data.results\n};\n\nexport const getMovieById = async(id) =>{\n    const response =await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\nreturn response.data\n};\n\nexport const getMovieCast = async (id) =>{\nconst response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\nreturn response.data.cast\n}\n\n\nexport const getFoundMovie = async (query) =>{\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\nreturn response.data.results\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data.results\n  }"],"names":["GoBack","location","useLocation","navigation","useNavigate","type","onClick","state","from","Contaienr","styled","H2","CardBlock","Feature","LinkCast","Link","MovieCard","item","releaseYear","Date","release_date","getFullYear","title","src","poster_path","alt","vote_average","overview","genres","map","id","name","to","MovieDetailsPage","itemId","useParams","useState","setItem","useEffect","getMovieById","toast","fetchItem","API_KEY","axios","getMovies","response","data","results","getMovieCast","cast","getFoundMovie","query","getReviews"],"sourceRoot":""}