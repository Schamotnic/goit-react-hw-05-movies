{"version":3,"file":"static/js/114.4fa1c186.chunk.js","mappings":"6QAEaA,E,OAAWC,GAAAA,GAAH,4N,SCCRC,EAAO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,8BACGA,IACC,yBACGA,EAAMC,OAAS,IACd,SAACJ,EAAD,UACGG,EAAME,KAAI,SAAAC,GACT,OAAO,yBACL,2BACGA,EAAKC,eACJ,gBAAKC,IAAG,yCAAoCF,EAAKC,cAAgBE,IAAKH,EAAKI,QAE7E,4BACE,kCAAUJ,EAAKI,SACf,uCAAeJ,EAAKK,oBAPVL,EAAKM,GAWpB,SAQhB,ECvBUC,EAAa,WAExB,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OAEP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUR,EAFV,OAGIW,EAAQX,GAHZ,gDAKIc,EAAAA,GAAAA,MAAY,yBALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAC,CAACP,KAID,8BACGR,IAAQ,SAACJ,EAAD,CAAMC,MAAOG,KAI3B,C,+LC1BKgB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,gCAKV,IAAMC,EAAS,mCAAG,oGACED,EAAAA,EAAAA,IAAA,uCAA0CD,IAD5C,cACfG,EADe,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKTC,EAAY,mCAAG,WAAMhB,GAAN,uFACFW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,oBAAkCU,EAAlC,oBADE,cAClBG,EADkB,yBAErBA,EAASC,MAFY,2CAAH,sDAKZP,EAAY,mCAAG,WAAOP,GAAP,uFACLW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADK,cACtBG,EADsB,yBAErBA,EAASC,KAAKG,MAFO,2CAAH,sDAMZC,EAAa,mCAAG,WAAOC,GAAP,uFACFR,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,yBADE,cACnBN,EADmB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKbK,EAAU,mCAAG,WAAOpB,GAAP,uFACCW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD","sources":["components/Cast/CastStyle.jsx","components/Cast/Cast.jsx","Pages/ActorsPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\ndisplay: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto 0 auto;\n  padding: 0;\n  list-style: none;\n`","import {CastList} from \"./CastStyle\"\nimport PropTypes from 'prop-types'\n\nexport const Cast = ({ items }) => {\n    return (\n      <>\n        {items && (\n          <div>\n            {items.length > 0 && (\n              <CastList>\n                {items.map(item => {\n                  return <li key={item.id}>\n                    <div>\n                      {item.profile_path && (\n                        <img src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt={item.name} />)\n                      }\n                      <div>\n                        <p>Name: {item.name}</p>\n                        <p>Character: {item.character}</p>\n                      </div>\n                    </div>\n                  </li>;\n                  },\n                )}\n              </CastList>\n            )}\n          </div>\n        )}\n      </>\n    );\n  };\n  \n  \n  Cast.propTypes={\n    items:PropTypes.array.isRequired\n  }","import {getMovieCast} from \"../services/moviesApi\";\nimport {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {toast} from \"react-hot-toast\";\nimport {Cast} from \"../components/Cast/Cast\";\n\n\nexport const ActorsPage = () => {\n\n  const {itemId} = useParams()\n\n  const [item, setItem] = useState(null)\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieCast(itemId);\n        setItem(item)\n      }catch (error){\n        toast.error('information not found')\n      }\n    }\n    fetchItem()\n  },[itemId])\n\n\n  return (\n    <>\n      {item && <Cast items={item}/>}\n    </>\n\n  );\n};\n\n","import axios from \"axios\"\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'c4aa3d510c537620c0bac28941863381'\n\naxios.defaults.baseURL =`${BASE_URL}`;\n\nexport const getMovies = async () =>{\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\nreturn response.data.results\n};\n\nexport const getMovieById = async(id) =>{\n    const response =await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\nreturn response.data\n};\n\nexport const getMovieCast = async (id) =>{\nconst response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\nreturn response.data.cast\n}\n\n\nexport const getFoundMovie = async (query) =>{\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\nreturn response.data.results\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data.results\n  }"],"names":["CastList","styled","Cast","items","length","map","item","profile_path","src","alt","name","character","id","ActorsPage","itemId","useParams","useState","setItem","useEffect","getMovieCast","toast","fetchItem","API_KEY","axios","getMovies","response","data","results","getMovieById","cast","getFoundMovie","query","getReviews"],"sourceRoot":""}