{"version":3,"file":"static/js/822.613edd02.chunk.js","mappings":"4SAEaA,EAAYC,EAAAA,GAAAA,IAAH,qFAMTC,EAAWD,EAAAA,GAAAA,GAAH,4NAURE,EAAWF,EAAAA,GAAAA,GAAH,ySAaRG,EAAYH,EAAAA,GAAAA,IAAH,6DC5BTI,EAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,MACjBC,GAAWC,EAAAA,EAAAA,MACpB,OAAO,SAACR,EAAD,WACP,6BACA,yCACG,SAACE,EAAD,UACFI,EAAMG,KAAI,gBAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,YAAZ,OACT,SAACT,EAAD,WACF,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAKR,GAAWS,MAAO,CAACC,eAAgB,QAA3E,WACI,SAACb,EAAD,CAAWc,IAAG,yCAAoCN,GAAeO,IAAKR,KAC1E,uBAAIA,QAHcD,EADP,UAYV,ECdYU,EAAU,WACvB,OAA0BC,EAAAA,EAAAA,UAAU,IAApC,eAAOf,EAAP,KAAcgB,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAU,GAAxC,eAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAI,wCACd,6FACID,GAAW,GADf,mBAG4BE,EAAAA,EAAAA,MAH5B,OAGcpB,EAHd,OAIcqB,EAASrB,EAAMG,KAAI,kBAA6B,CAACC,GAA9B,EAAEA,GAAgCC,MAAlC,EAAKA,MAAoCC,YAAzC,EAAWA,YAAX,IACzBU,EAASK,GALjB,yEAQQH,GAAW,GARnB,6EADc,uBAAC,WAAD,wBAadI,EACC,GAAC,KAGE,gCACKL,IC1BF,SAAC,KAAD,KD2BC,SAAClB,EAAD,CAAUC,MAASA,MAI1B,C,+LE7BKuB,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAA,UAHiB,gCAKV,IAAMJ,EAAS,mCAAG,oGACEI,EAAAA,EAAAA,IAAA,uCAA0CD,IAD5C,cACfE,EADe,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKTC,EAAY,mCAAG,WAAMxB,GAAN,uFACFoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAkCmB,EAAlC,oBADE,cAClBE,EADkB,yBAErBA,EAASC,MAFY,2CAAH,sDAKZG,EAAY,mCAAG,WAAOzB,GAAP,uFACLoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CmB,EAA1C,oBADK,cACtBE,EADsB,yBAErBA,EAASC,KAAKI,MAFO,2CAAH,sDAMZC,EAAa,mCAAG,WAAOC,GAAP,uFACFR,EAAAA,EAAAA,IAAA,gCAAmCD,EAAnC,kBAAoDS,EAApD,yBADE,cACnBP,EADmB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKbM,EAAU,mCAAG,WAAO7B,GAAP,uFACCoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA0CmB,EAA1C,oBADD,cAChBE,EADgB,yBAEfA,EAASC,KAAKC,SAFC,2CAAH,qD","sources":["components/MainPage/MainPageStyle.jsx","components/MainPage/MainPage.jsx","Pages/HomePage.jsx","components/Loader/Loader.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Contaienr = styled.div`\nwidth: 1200px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const UlStyles = styled.ul`\ndisplay: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin: 0 auto 0 auto;\n  padding: 0;\n  list-style: none;\n`;\n\nexport const LiStyles = styled.li`\nborder-radius: 2px;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2),\n  0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    Transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const ImgStyles = styled.img`\n width: 100%;\n  object-fit: cover;\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n","import { useLocation , Link} from \"react-router-dom\";\nimport{Contaienr,UlStyles,LiStyles,ImgStyles} from './MainPageStyle';\n\nexport const MainPage = ({items}) =>{\n  const  location = useLocation()\nreturn(<Contaienr>\n<main>\n<h1>List Movies</h1>\n   <UlStyles>\n{items.map(({id,title, poster_path}) => \n  <LiStyles key ={id}>\n<Link to={`/movies/${id}`} state={{from:location}} style={{textDecoration: 'none'}}>\n    <ImgStyles src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title}/>\n<p>{title}</p>\n</Link>\n  </LiStyles>  \n)}\n   </UlStyles>\n   </main>\n</Contaienr>\n)\n}\n\n","import { useEffect,useState } from \"react\";\n// import { LoaderIcon } from \"react-hot-toast\";\nimport {getMovies} from '../services/moviesApi'\nimport { Loader } from \"components/Loader/Loader\";\nimport {MainPage} from \"../components/MainPage/MainPage\"\n\n\nexport const HomePage =() =>{\nconst [items, setItems] = useState ([]);\nconst [loading, setLoading] = useState (false);\n\nuseEffect(()=>{\nasync function fetchItems (){\n    setLoading(true)\n    try{\n        const items = await getMovies();\n        const movies = items.map(({id,title,poster_path}) => ({id, title, poster_path}))\n        setItems(movies)\n    } catch(error){\n    } finally{\n        setLoading(false)\n    }\n        \n}\nfetchItems();\n},[])\n\nreturn(\n    <>\n        {loading && Loader()}\n        <MainPage items = {items}/>\n    </>\n)\n\n}\n","import { ThreeCircles } from \"react-loader-spinner\";\n\n export const Loader =()=>{\nreturn <ThreeCircles />\n};","import axios from \"axios\"\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'c4aa3d510c537620c0bac28941863381'\n\naxios.defaults.baseURL =`${BASE_URL}`;\n\nexport const getMovies = async () =>{\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\nreturn response.data.results\n};\n\nexport const getMovieById = async(id) =>{\n    const response =await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\nreturn response.data\n};\n\nexport const getMovieCast = async (id) =>{\nconst response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\nreturn response.data.cast\n}\n\n\nexport const getFoundMovie = async (query) =>{\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\nreturn response.data.results\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data.results\n  }"],"names":["Contaienr","styled","UlStyles","LiStyles","ImgStyles","MainPage","items","location","useLocation","map","id","title","poster_path","to","state","from","style","textDecoration","src","alt","HomePage","useState","setItems","loading","setLoading","useEffect","getMovies","movies","fetchItems","API_KEY","axios","response","data","results","getMovieById","getMovieCast","cast","getFoundMovie","query","getReviews"],"sourceRoot":""}