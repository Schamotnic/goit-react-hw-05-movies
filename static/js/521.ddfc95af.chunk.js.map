{"version":3,"file":"static/js/521.ddfc95af.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBarStyle.jsx","components/SearchBar/SearchBar.jsx","components/FoundMovies/FoundMoviesStyled.jsx","components/FoundMovies/FoundMovies.jsx","Pages/MoviesPage.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\nmargin: 25px auto 25px auto;\n  width: fit-content;\n`\n\n\nexport const InputForm = styled.input`\nmargin-right: 5px;\npadding: 15px ;\n  border-width: 2px;\n  border-style: ridge;\n  border-color: -internal-light-dark(rgb(118, 118, 118), rgb(133, 133, 133));\n  border-image: -moz-linear-gradient(darkmagenta);\n  `\n\n\nexport const ButtonForm = styled.button`\npadding:  15px 15px 15px 3px;\n  width: fit-content;\n  border:none;\n`","import { useState } from \"react\";\nimport {ImSearch} from 'react-icons/im';\nimport {SearchForm,InputForm,ButtonForm} from \"./SearchBarStyle\";\nimport PropTypes from 'prop-types';\n\n\nexport const SearchBar =({onSubmit}) =>{\nconst [searchQuery, setSearchQuery] = useState('');\n\nconst handleQueryChange = (e) =>{\n    setSearchQuery(e.currentTarget.value.toLowerCase()); \n   }\n    \n   const handelSubmit = (e) =>{\n        e.preventDefault()\n        if(searchQuery.trim() === '')\n        return\n        onSubmit(searchQuery)\n        setSearchQuery('')\n    }\n\nreturn (\n    <>\n        <SearchForm onSubmit={handelSubmit}>\n            <InputForm\n                name ='query'\n                type =\"text\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies\"\n                onChange={handleQueryChange}\n            />\n            <ButtonForm type='submit'>Search<ImSearch/></ButtonForm>\n        </SearchForm>\n    </>\n)\n};\nSearchBar.propTypes ={\n    onSubmit:PropTypes.func.isRequired \n}\n\n\n\n\n\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const DivStyled = styled.div`\nwidth: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport const Ulstyled = styled.ul`\ndisplay: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin:0  auto 0 auto;\n  padding: 0;\n  list-style: none;\n`\n\nexport const LiStyled  = styled.li`\nborder-radius: 2px;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.2),\n  0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover{\n    Transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`\nexport const StyledLink = styled(Link)`\ntext-decoration: none;\n`\nexport const ImgStyled  = styled.img`\n width: 100%;\n  object-fit: cover;\n`","import { useLocation } from \"react-router-dom\"\nimport PropTypes from \"prop-types\"\nimport {StyledLink,DivStyled,Ulstyled,LiStyled,ImgStyled} from './FoundMoviesStyled'\n\n\nexport const FoundMovies =({founds}) =>{\nconst location = useLocation()\nreturn (\n    <DivStyled>\n        <Ulstyled>\n            {founds.map(({id, title, poster_path}) =>{\n                return(\n                    <LiStyled key={id}>\n<StyledLink to ={`/movies/${id}`} state={{from:location}}>\n    <ImgStyled src={`https://image.tmdb.org/t/p/w200${poster_path}`} alt={title} />\n    {title}\n</StyledLink> \n                    </LiStyled>\n                )\n            })}\n        </Ulstyled>\n    </DivStyled>\n)\n}\n\nFoundMovies.propTypes={\n    founds: PropTypes.array.isRequired\n}","import {getFoundMovie} from '../services/moviesApi'\nimport { useEffect,useState} from 'react'\nimport { useLocation ,useNavigate,useSearchParams } from 'react-router-dom'\nimport {SearchBar} from \"../components/SearchBar/SearchBar\"\nimport { FoundMovies } from '../components/FoundMovies/FoundMovies'\n\n\nexport const MoviesPage = () =>{\nconst [query,setQuery] = useState('');\nconst[found, setFound] = useState([]);\nconst [searchParams] = useSearchParams ();\nconst search = searchParams.get('query');\nconst location = useLocation();\nconst navigate = useNavigate();\n\nuseEffect(() =>{\n    if(query === ''){\n        return\n    }\n     \n\n  async function fetchItem(){\n    try{\n        const item = await getFoundMovie(query);\n        const movieItem = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(movieItem)\n    }catch(error){\n    }\n  }\n  fetchItem()\n  },[query] );\n\n\n  useEffect(()=>{\n    \n    async function fetchItem(){\n      if(search === null){\n        return\n      }\n\n      try{\n        const item = await getFoundMovie(search);\n        const searchMovie = item.map(({id, overview, poster_path, title}) =>({id, overview, poster_path, title}))\n        setFound(searchMovie)\n      }catch(error){\n      }\n        \n    }\n    fetchItem()\n  },[search])\n\nconst forForm =(searchQuery) => {\n  setQuery(searchQuery)\n  navigate({...location, search: ` query=${searchQuery}`})\n} \n\nreturn(\n  <>\n   <SearchBar onSubmit={forForm}/>\n      <FoundMovies founds={found}/> \n  </>\n)\n}\n","import axios from \"axios\"\n\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3'\nconst API_KEY = 'c4aa3d510c537620c0bac28941863381'\n\naxios.defaults.baseURL =`${BASE_URL}`;\n\nexport const getMovies = async () =>{\n    const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\nreturn response.data.results\n};\n\nexport const getMovieById = async(id) =>{\n    const response =await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`);\nreturn response.data\n};\n\nexport const getMovieCast = async (id) =>{\nconst response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\nreturn response.data.cast\n}\n\n\nexport const getFoundMovie = async (query) =>{\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`)\nreturn response.data.results\n}\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`)\n    return response.data.results\n  }"],"names":["SearchForm","styled","InputForm","ButtonForm","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","trim","name","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","DivStyled","Ulstyled","LiStyled","StyledLink","Link","ImgStyled","FoundMovies","founds","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","MoviesPage","query","setQuery","found","setFound","useSearchParams","search","get","navigate","useNavigate","useEffect","getFoundMovie","item","movieItem","overview","fetchItem","searchMovie","API_KEY","axios","getMovies","response","data","results","getMovieById","getMovieCast","cast","getReviews"],"sourceRoot":""}